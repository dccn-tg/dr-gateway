// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "dr gateway APIs",
    "title": "dr-gateway",
    "version": "0.1.0"
  },
  "basePath": "/v1",
  "paths": {
    "/collections": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of all collections",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyCollections"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/collections/ou/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of collections belonging to the organisational unit",
        "parameters": [
          {
            "enum": [
              "dcc",
              "dccn",
              "dcn",
              "dcmn"
            ],
            "type": "string",
            "description": "short name of the organisational unit",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyCollections"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/collections/project/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of collections associated with the project id",
        "parameters": [
          {
            "type": "string",
            "description": "project identifier",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyCollections"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Prometheus metrics",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "security": [
          {
            "oauth2": [
              "urn:dccn:dr-gateway:*"
            ]
          },
          {
            "apiKeyHeader": [],
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "endpoint for API server health check.",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string",
              "enum": [
                "pong"
              ]
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of all users",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyUsers"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/users/ou/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of users belonging to the organisational unit",
        "parameters": [
          {
            "enum": [
              "dcc",
              "dccn",
              "dcn",
              "dcmn"
            ],
            "type": "string",
            "description": "short name of the organisational unit",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyUsers"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "search users with matched email address and/or display name",
        "parameters": [
          {
            "type": "string",
            "description": "display name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "email address",
            "name": "email",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyUsers"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "collectionState": {
      "description": "collection state",
      "type": "string",
      "enum": [
        "editable",
        "reviewable_internal",
        "reviewable_external",
        "archived",
        "published",
        "unknown"
      ]
    },
    "collectionType": {
      "description": "collection type",
      "type": "string",
      "enum": [
        "dac",
        "rdc",
        "dsc",
        "unknown"
      ]
    },
    "principal": {
      "type": "string"
    },
    "responseBody500": {
      "description": "JSON object containing server side error.",
      "properties": {
        "errorMessage": {
          "description": "server-side error message.",
          "type": "string"
        },
        "exitCode": {
          "description": "server-side exit code.",
          "type": "integer"
        }
      }
    },
    "responseBodyCollectionMetadata": {
      "description": "JSON object containing collection metadata.",
      "required": [
        "path",
        "identifier",
        "identifierDOI",
        "type",
        "state",
        "organisationalUnit",
        "numberOfFiles",
        "quotaInBytes",
        "sizeInBytes",
        "projectID"
      ],
      "properties": {
        "identifier": {
          "description": "collection identifier",
          "type": "string"
        },
        "identifierDOI": {
          "description": "collection DOI",
          "type": "string"
        },
        "numberOfFiles": {
          "description": "number of files in the collection",
          "type": "integer"
        },
        "organisationalUnit": {
          "description": "organisational unit",
          "type": "string"
        },
        "path": {
          "description": "collection path",
          "type": "string"
        },
        "projectID": {
          "description": "project identifier",
          "type": "string"
        },
        "quotaInBytes": {
          "description": "collection storage quota",
          "type": "integer"
        },
        "sizeInBytes": {
          "description": "size of data in the collection",
          "type": "integer"
        },
        "state": {
          "$ref": "#/definitions/collectionState"
        },
        "type": {
          "$ref": "#/definitions/collectionType"
        }
      }
    },
    "responseBodyCollections": {
      "description": "JSON list containing a list of collections",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseBodyCollectionMetadata"
          }
        }
      }
    },
    "responseBodyUserMetadata": {
      "description": "JSON object containing user metadata.",
      "required": [
        "displayName",
        "identityProvider",
        "organisationalUnits"
      ],
      "properties": {
        "displayName": {
          "description": "display name",
          "type": "string"
        },
        "email": {
          "description": "email address",
          "type": "string",
          "format": "email"
        },
        "identityProvider": {
          "description": "identity provider",
          "type": "string"
        },
        "organisationalUnits": {
          "description": "organisational units",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "responseBodyUsers": {
      "description": "JSON list containing a list of users",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseBodyUserMetadata"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    },
    "basicAuth": {
      "type": "basic"
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://login.dccn.nl/connect/token",
      "scopes": {
        "urn:dccn:filer-gateway:*": "general access scope for filer-gateway APIs"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "dr gateway APIs",
    "title": "dr-gateway",
    "version": "0.1.0"
  },
  "basePath": "/v1",
  "paths": {
    "/collections": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of all collections",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyCollections"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/collections/ou/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of collections belonging to the organisational unit",
        "parameters": [
          {
            "enum": [
              "dcc",
              "dccn",
              "dcn",
              "dcmn"
            ],
            "type": "string",
            "description": "short name of the organisational unit",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyCollections"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/collections/project/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of collections associated with the project id",
        "parameters": [
          {
            "type": "string",
            "description": "project identifier",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyCollections"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Prometheus metrics",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "security": [
          {
            "oauth2": [
              "urn:dccn:dr-gateway:*"
            ]
          },
          {
            "apiKeyHeader": [],
            "basicAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "endpoint for API server health check.",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string",
              "enum": [
                "pong"
              ]
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of all users",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyUsers"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/users/ou/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "get metadata of users belonging to the organisational unit",
        "parameters": [
          {
            "enum": [
              "dcc",
              "dccn",
              "dcn",
              "dcmn"
            ],
            "type": "string",
            "description": "short name of the organisational unit",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyUsers"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "search users with matched email address and/or display name",
        "parameters": [
          {
            "type": "string",
            "description": "display name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "email address",
            "name": "email",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/responseBodyUsers"
            }
          },
          "500": {
            "description": "failure",
            "schema": {
              "$ref": "#/definitions/responseBody500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "collectionState": {
      "description": "collection state",
      "type": "string",
      "enum": [
        "editable",
        "reviewable_internal",
        "reviewable_external",
        "archived",
        "published",
        "unknown"
      ]
    },
    "collectionType": {
      "description": "collection type",
      "type": "string",
      "enum": [
        "dac",
        "rdc",
        "dsc",
        "unknown"
      ]
    },
    "principal": {
      "type": "string"
    },
    "responseBody500": {
      "description": "JSON object containing server side error.",
      "properties": {
        "errorMessage": {
          "description": "server-side error message.",
          "type": "string"
        },
        "exitCode": {
          "description": "server-side exit code.",
          "type": "integer"
        }
      }
    },
    "responseBodyCollectionMetadata": {
      "description": "JSON object containing collection metadata.",
      "required": [
        "path",
        "identifier",
        "identifierDOI",
        "type",
        "state",
        "organisationalUnit",
        "numberOfFiles",
        "quotaInBytes",
        "sizeInBytes",
        "projectID"
      ],
      "properties": {
        "identifier": {
          "description": "collection identifier",
          "type": "string"
        },
        "identifierDOI": {
          "description": "collection DOI",
          "type": "string"
        },
        "numberOfFiles": {
          "description": "number of files in the collection",
          "type": "integer"
        },
        "organisationalUnit": {
          "description": "organisational unit",
          "type": "string"
        },
        "path": {
          "description": "collection path",
          "type": "string"
        },
        "projectID": {
          "description": "project identifier",
          "type": "string"
        },
        "quotaInBytes": {
          "description": "collection storage quota",
          "type": "integer"
        },
        "sizeInBytes": {
          "description": "size of data in the collection",
          "type": "integer"
        },
        "state": {
          "$ref": "#/definitions/collectionState"
        },
        "type": {
          "$ref": "#/definitions/collectionType"
        }
      }
    },
    "responseBodyCollections": {
      "description": "JSON list containing a list of collections",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseBodyCollectionMetadata"
          }
        }
      }
    },
    "responseBodyUserMetadata": {
      "description": "JSON object containing user metadata.",
      "required": [
        "displayName",
        "identityProvider",
        "organisationalUnits"
      ],
      "properties": {
        "displayName": {
          "description": "display name",
          "type": "string"
        },
        "email": {
          "description": "email address",
          "type": "string",
          "format": "email"
        },
        "identityProvider": {
          "description": "identity provider",
          "type": "string"
        },
        "organisationalUnits": {
          "description": "organisational units",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "responseBodyUsers": {
      "description": "JSON list containing a list of users",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseBodyUserMetadata"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    },
    "basicAuth": {
      "type": "basic"
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://login.dccn.nl/connect/token",
      "scopes": {
        "urn:dccn:filer-gateway:*": "general access scope for filer-gateway APIs"
      }
    }
  }
}`))
}
