// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUsersSearchParams creates a new GetUsersSearchParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUsersSearchParams() *GetUsersSearchParams {
	return &GetUsersSearchParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUsersSearchParamsWithTimeout creates a new GetUsersSearchParams object
// with the ability to set a timeout on a request.
func NewGetUsersSearchParamsWithTimeout(timeout time.Duration) *GetUsersSearchParams {
	return &GetUsersSearchParams{
		timeout: timeout,
	}
}

// NewGetUsersSearchParamsWithContext creates a new GetUsersSearchParams object
// with the ability to set a context for a request.
func NewGetUsersSearchParamsWithContext(ctx context.Context) *GetUsersSearchParams {
	return &GetUsersSearchParams{
		Context: ctx,
	}
}

// NewGetUsersSearchParamsWithHTTPClient creates a new GetUsersSearchParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUsersSearchParamsWithHTTPClient(client *http.Client) *GetUsersSearchParams {
	return &GetUsersSearchParams{
		HTTPClient: client,
	}
}

/*
GetUsersSearchParams contains all the parameters to send to the API endpoint

	for the get users search operation.

	Typically these are written to a http.Request.
*/
type GetUsersSearchParams struct {

	/* Email.

	   email address
	*/
	Email *string

	/* Name.

	   display name
	*/
	Name *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get users search params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUsersSearchParams) WithDefaults() *GetUsersSearchParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get users search params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUsersSearchParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get users search params
func (o *GetUsersSearchParams) WithTimeout(timeout time.Duration) *GetUsersSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get users search params
func (o *GetUsersSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get users search params
func (o *GetUsersSearchParams) WithContext(ctx context.Context) *GetUsersSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get users search params
func (o *GetUsersSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get users search params
func (o *GetUsersSearchParams) WithHTTPClient(client *http.Client) *GetUsersSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get users search params
func (o *GetUsersSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmail adds the email to the get users search params
func (o *GetUsersSearchParams) WithEmail(email *string) *GetUsersSearchParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the get users search params
func (o *GetUsersSearchParams) SetEmail(email *string) {
	o.Email = email
}

// WithName adds the name to the get users search params
func (o *GetUsersSearchParams) WithName(name *string) *GetUsersSearchParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get users search params
func (o *GetUsersSearchParams) SetName(name *string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *GetUsersSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Email != nil {

		// query param email
		var qrEmail string

		if o.Email != nil {
			qrEmail = *o.Email
		}
		qEmail := qrEmail
		if qEmail != "" {

			if err := r.SetQueryParam("email", qEmail); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
